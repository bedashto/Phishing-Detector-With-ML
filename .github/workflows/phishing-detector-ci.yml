name: Phishing Detector CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check if script is executable
        run: |
          python -c "import phishing_detector" || echo "Module import check failed"

      - name: Create dummy dataset for training
        run: |
          echo 'url,is_phishing' > dummy_url_dataset.csv
          echo 'https://example.com,0' >> dummy_url_dataset.csv
          echo 'https://phishing-example.com/login.html,1' >> dummy_url_dataset.csv
          echo 'https://legit-site.org,0' >> dummy_url_dataset.csv
          echo 'https://suspicious-verify-account.com,1' >> dummy_url_dataset.csv
          echo 'https://google.com,0' >> dummy_url_dataset.csv

      - name: Test model training
        run: |
          python phishing_detector.py train --dataset dummy_url_dataset.csv --type url --output test_models
          # Check if model files were created
          ls -la test_models/

      - name: Test URL prediction
        run: |
          echo 'https://example.com' > test_urls.txt
          echo 'https://suspicious-site.com/login' >> test_urls.txt
          python phishing_detector.py url --file test_urls.txt --model test_models/ --output test_results.csv --no-fetch
          # Check if results file was created
          cat test_results.csv
